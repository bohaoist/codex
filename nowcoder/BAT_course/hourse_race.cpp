#include<algorithm>
#include<iostream>
#include<vector>
using namespace std;

int winMost(vector<int> oppo, vector<int> horses, int n) {
    // write code here
    sort(oppo.begin(), oppo.end(), less<int>());
    sort(horses.begin(), horses.end(),greater<int>());
    int count = 0;
    int r = horses.size() - 1;
    for(int i=0,j = n-1; i < n; i++){        
        for( ;j >=0; j--){
            if(horses[i] > oppo[j]){
                count++;
                break;
            }
        }
    }
    return count;
}

int winMosts(vector<int> oppo, vector<int> horses, int n) {
    sort(oppo.begin(),oppo.end());
    sort(horses.begin(),horses.end());
    int r=horses.size()-1,c=0;
    for(int i=oppo.size()-1;i>=0;i--){
        if(horses[r]>oppo[i]){
            c++;r--;
        }
    }
    return c;
}

int main(){
    vector<int> horse = {2573,5720,9550,2401,4937,8578,5013,5798,6940,9192,6203,7915,8703,2082,2419,5092,5164,6407,4836,4597,2687,9168,8550,4669,9251,4397,3044,1559,730,4017,1091,3623,7731,1297,7794,7045,6244,5317,182,6302,5522,2735,1390,998,9313,4611,750,2660,8275,9520,3240,1454,3685,9021,4980,9216,9235,8061,7232,528,1273,2478,7068,6963,2539,8312,1824,3889,8413,7596,110,6253,1861,2245,3303,1414,4620,7517,5164,2181,2898,5600,4265,3550,5119,4186,9358,2565,5999,1971,2872,8930,1862,9278,8999,1715,6128,4114,2861,7425,7358,3654,2994,7086,5252,1435,4945,2933,2639,3757,7232,658,1821,8821,3057,8795,3945,5435,609,5858,4547,1208,7806,4686,2270,334,1770,4085,5027,9413,6694,9262,5810,6512,610,4264,6878,4178,9373,2};
    vector<int> oppo  = {4147,7333,7104,7086,4918,5755,1850,1398,9108,9208,5681,9387,288,812,8403,5779,5457,2571,7350,3260,1954,6118,2506,3699,6457,8953,1724,92,2045,9110,4494,6930,5152,9395,4473,2476,5024,1349,5178,4413,1115,3908,3188,4505,702,6276,3872,3372,8786,9188,8983,2841,3688,6648,351,9000,3573,9038,5216,7650,4434,3654,492,1752,1597,9208,5647,7370,1808,5026,5656,4619,9140,7001,1139,4967,2803,4145,7203,945,8613,4291,5994,7216,7246,7389,8279,1275,7046,6551,1773,2315,3786,1340,1766,7358,2320,4262,8725,3432,7648,3792,6783,4232,9164,508,2972,1503,2993,4892,934,708,8500,5885,9043,3801,5404,845,9441,7454,6538,1100,4135,9433,2076,6849,4958,4569,876,2233,2455,6778,7623,804,6506,8392,136,8366,6850,9357};
    cout << winMost(oppo,horse,horse.size());
}
